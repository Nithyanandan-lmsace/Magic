{"version":3,"file":"linkexpirytime.min.js","sources":["../src/linkexpirytime.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Magic link expiration form define js.\n * @module   auth_magic\n * @copyright  2023 bdecent gmbh <https://bdecent.de>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\"core/fragment\",\"core/modal_factory\",\"core/modal_events\",\"core/notification\",\"core/str\", 'core/ajax'],\n(function(Fragment,ModalFactory,ModalEvents,notification,String, Ajax) {\n\n    /**\n     * Set Magic login link expiration time setting show in modal.\n     * @param {object} params\n     */\n    function showModal (params) {\n        const seletor = document.querySelectorAll(\".magic-loginlink_expiry\");\n        seletor.forEach((button) => {\n            button.addEventListener('click', function(e) {\n                e.preventDefault();\n                var userid = e.currentTarget.getAttribute(\"data-id\");\n                params.userid = userid;\n                ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: String.get_string('linkexpirytime', 'auth_magic'),\n                    body: getBodyContent(params),\n                    large: true\n                })\n                .then(function(modal) {\n\n                    modal.getRoot().on(ModalEvents.save, e => {\n                        e.preventDefault();\n                        modal.getRoot().find('form').submit();\n                    });\n\n                    modal.getRoot().on('submit', 'form', e => {\n                        e.preventDefault();\n                        submitFormData(userid);\n                        modal.hide();\n                    });\n\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        modal.destroy();\n                    });\n                    modal.show();\n                    return modal;\n                }).catch(notification.exception);\n            });\n        });\n    }\n\n    /**\n     * Submit form data.\n     * @param {int} userid\n     */\n    function submitFormData(userid) {\n        var modalform = document.querySelectorAll('#linkexpirytime form')[0];\n        var formData = new URLSearchParams(new FormData(modalform)).toString();\n        Ajax.call([{\n            methodname: 'auth_magic_update_link_expiry_time',\n            args: {userid: userid, formdata: formData},\n            done: function(response) {\n                if (response.message) {\n                    notification.addNotification({\n                        message: response.message,\n                        type: \"success\"\n                    });\n                }\n            }\n        }]);\n    }\n\n    /**\n     * Returns submit form data in load fragment.\n     * @param {object} params\n     * @returns {Promise}\n     */\n    function getBodyContent(params) {\n        return Fragment.loadFragment('auth_magic', 'link_expiration_form', params.contextid, params);\n    }\n\n    return {\n        init: function(params) {\n            showModal(params);\n        }\n    };\n}));\n\n//# sourceMappingURL=linkexpirytime.min.js.map"],"names":["define","Fragment","ModalFactory","ModalEvents","notification","String","Ajax","showModal","params","document","querySelectorAll","forEach","button","addEventListener","e","preventDefault","userid","currentTarget","getAttribute","create","type","types","SAVE_CANCEL","title","get_string","body","getBodyContent","large","then","modal","getRoot","on","save","find","submit","modalform","formData","URLSearchParams","FormData","toString","call","methodname","args","formdata","done","response","message","addNotification","submitFormData","hide","hidden","destroy","show","catch","exception","loadFragment","contextid","init"],"mappings":";;;;;;AAqBAA,mCAAO,CAAC,gBAAgB,qBAAqB,oBAAoB,oBAAoB,WAAY,cAChG,SAASC,SAASC,aAAaC,YAAYC,aAAaC,OAAQC,eAMpDC,UAAWC,QACAC,SAASC,iBAAiB,2BAClCC,SAASC,SACbA,OAAOC,iBAAiB,SAAS,SAASC,GACtCA,EAAEC,qBACEC,OAASF,EAAEG,cAAcC,aAAa,WAC1CV,OAAOQ,OAASA,OAChBd,aAAaiB,OAAO,CAChBC,KAAMlB,aAAamB,MAAMC,YACzBC,MAAOlB,OAAOmB,WAAW,iBAAkB,cAC3CC,KAAMC,eAAelB,QACrBmB,OAAO,IAEVC,MAAK,SAASC,cAEXA,MAAMC,UAAUC,GAAG5B,YAAY6B,MAAMlB,IACjCA,EAAEC,iBACFc,MAAMC,UAAUG,KAAK,QAAQC,YAGjCL,MAAMC,UAAUC,GAAG,SAAU,QAAQjB,IACjCA,EAAEC,0BAmBEC,YAChBmB,UAAY1B,SAASC,iBAAiB,wBAAwB,GAC9D0B,SAAW,IAAIC,gBAAgB,IAAIC,SAASH,YAAYI,WAC5DjC,KAAKkC,KAAK,CAAC,CACPC,WAAY,qCACZC,KAAM,CAAC1B,OAAQA,OAAQ2B,SAAUP,UACjCQ,KAAM,SAASC,UACPA,SAASC,SACT1C,aAAa2C,gBAAgB,CACzBD,QAASD,SAASC,QAClB1B,KAAM,gBA5BN4B,CAAehC,QACfa,MAAMoB,UAGVpB,MAAMC,UAAUC,GAAG5B,YAAY+C,QAAQ,WACnCrB,MAAMsB,aAEVtB,MAAMuB,OACCvB,SACRwB,MAAMjD,aAAakD,0BA+BzB5B,eAAelB,eACbP,SAASsD,aAAa,aAAc,uBAAwB/C,OAAOgD,UAAWhD,cAGlF,CACHiD,KAAM,SAASjD,QACXD,UAAUC"}